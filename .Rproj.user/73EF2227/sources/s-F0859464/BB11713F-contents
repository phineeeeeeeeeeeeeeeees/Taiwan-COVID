#####################################################################################################
# Taiwan-COVID
# Data analysis
# 2021-05-31
#####################################################################################################


# =====================================
# required packages
# =====================================
library(sf)
library(dplyr) ; library(tidyr) 
library(ggplot2)
library(lubridate) ; library(stringr)

# =====================================
# import data
# =====================================
# Covid dataset from CDC
COVID_df <- read.csv("https://data.cdc.gov.tw/download?resourceid=3c1e263d-16ec-4d70-b56c-21c9e2171fc7&dataurl=https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.csv" , 
                      stringsAsFactors = FALSE) %>% 
  setNames(c("disease" , "date_diagnostic" , "adm2" , "adm3" , "gender" , "imported" , "age" , "n_cases")) %>% 
  select(-disease) %>% 
  # cleaan table
  mutate(date_diagnostic = as_date(as.character(date_diagnostic))) %>% 
  mutate(adm2 = ifelse(adm2 == "空值" , NA , adm2) , 
         adm3 = ifelse(adm3 == "空值" , NA , adm3) , 
         imported = ifelse(imported == "是" , TRUE , FALSE)) %>% 
  mutate(adm2 = str_replace_all(adm2 , "台" , "臺") ) %>% 
  # complete time-series (days without confirmed cases)
  right_join(
    data.frame(date_diagnostic = seq(min(.$date_diagnostic) , 
                                     max(.$date_diagnostic) , 
                                     "1 day"))
  ) %>% 
  arrange(date_diagnostic) %>% 
  mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases))

# Taiwan shapefile
TWN_adm3 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>% 
  st_simplify(preserveTopology = TRUE , dTolerance = 0.005) %>% 
  st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
TWN_adm2 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>% 
  group_by(COUNTYNAME) %>% 
  summarize() %>% 
  ungroup %>% 
  st_simplify(preserveTopology = FALSE , dTolerance = 0.005) %>% 
  st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)

# adm2 and adm3 population
# source("populationXLS_clean.R")
population_adm2 <- read.csv("population_adm2.csv" , stringsAsFactors = FALSE)
population_adm3 <- read.csv("population_adm3.csv" , stringsAsFactors = FALSE)


# =====================================
# total curve
# =====================================
COVID_df %>% 
  group_by(date_diagnostic) %>% 
  summarize(n_cases = sum(n_cases)) %>% # number of cases per day
  # visualization
  ggplot(aes(x = date_diagnostic , y = n_cases)) +
  geom_line() +
  labs(x = "個案研判日" , y = "確診病例數") +
  theme_bw() +
  theme(text = element_text(family = "Noto Sans CJK TC"))

# =====================================
# 7-day incidence (of domestic cases)
# =====================================
# by adm2 -----------------------------
incidence_daily_adm2 <- COVID_df %>% 
  filter(imported == FALSE) %>% 
  group_by(date_diagnostic , adm2) %>% 
  summarize(n_cases = sum(n_cases)) %>% 
  ungroup() %>% 
  # complete time series
  right_join(
    data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) , 
                                     max(COVID_df$date_diagnostic) , 
                                     "1 day"))
  ) %>% 
  arrange(date_diagnostic) %>% 
  # complete adm2 list
  pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>% 
  select(-`NA`) %>% 
  pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>% 
  mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>% 
  # join population
  left_join(population_adm2 , by = "adm2") %>% 
  # number of cases per 100,000 
  mutate(n_cases_population = n_cases / population * 100000) %>% 
  # 7-day incidence
  group_by(adm2) %>% 
  mutate(incidence_7day = zoo::rollapply(n_cases_population , 
                                         width = 7 , 
                                         FUN = sum , 
                                         align = "right" , 
                                         fill = NA)) %>% 
  ungroup()

# the incidence of a particular day as sf
selected_date <- max(COVID_df$date_diagnostic)
incidence_oneday_adm2_sf <- TWN_adm2 %>% 
  left_join(
    incidence_daily_adm2 %>% 
      filter(date_diagnostic == selected_date) %>% 
      select(adm2 , incidence_7day , n_cases , population , n_cases_population), 
    by = c("COUNTYNAME" = "adm2")
  ) %>% 
  mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day))
# map
ggplot() +
  geom_sf(
    data = incidence_oneday_adm2_sf , 
    aes(fill = incidence_7day)
  ) +
  scale_fill_gradientn(colors = c("grey96" , RColorBrewer::brewer.pal(7,"YlOrRd")) , 
                       limits = c(0,105) , oob = scales::squish) +
  labs(fill = "近七日發生率\n(每十萬人)") +
  theme_bw() +
  theme(text = element_text(family = "Noto Sans CJK TC"))

# by adm3 -----------------------------
incidence_daily_adm3 <- COVID_df %>% 
  filter(imported == FALSE) %>% 
  group_by(date_diagnostic , adm2 , adm3) %>% 
  summarize(n_cases = sum(n_cases)) %>% 
  ungroup() %>% 
  # complete time series
  right_join(
    data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) , 
                                     max(COVID_df$date_diagnostic) , 
                                     "1 day"))
  ) %>% 
  arrange(date_diagnostic) %>% 
  # complete adm3 list
  pivot_wider(id_cols = c(date_diagnostic , adm2 , adm3) , names_from = c(adm2 , adm3) , names_sep = "_" , values_from = n_cases) %>% 
  select(-contains("NA")) %>% 
  pivot_longer(cols = -date_diagnostic , names_to = "adm3" , values_to = "n_cases") %>% 
  separate(col = adm3 , into = c("adm2" , "adm3") , sep = "_") %>% 
  mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>% 
  # join population
  left_join(population_adm3 , by = c("adm2" , "adm3")) %>% 
  # number of cases per 100,000 
  mutate(n_cases_population = n_cases / population * 100000) %>% 
  # 7-day incidence
  group_by(adm2) %>% 
  mutate(incidence_7day = zoo::rollapply(n_cases_population , 
                                         width = 7 , 
                                         FUN = sum , 
                                         align = "right" , 
                                         fill = NA)) %>% 
  ungroup()
# the incidence of a particular day as sf
incidence_oneday_adm3_sf <- TWN_adm3 %>% 
  select(COUNTYNAME, TOWNNAME) %>% 
  left_join(
    incidence_daily_adm3 %>% 
      filter(date_diagnostic == selected_date) %>% 
      select(adm2 , adm3 , incidence_7day , n_cases , population , n_cases_population), 
    by = c("COUNTYNAME" = "adm2" , "TOWNNAME" = "adm3")
  ) %>% 
  mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day))
# map
ggplot() +
  geom_sf(
    data = incidence_oneday_adm3_sf , 
    aes(fill = incidence_7day) , 
    size = 0.1
  ) +
  geom_sf(data = TWN_adm2 , fill = NA , size = 0.6) + 
  scale_fill_gradientn(colors = c("grey96" , RColorBrewer::brewer.pal(7,"YlOrRd")) , 
                       limits = c(0,105) , oob = scales::squish) +
  labs(fill = "近七日發生率\n(每十萬人)") +
  theme_bw() +
  theme(text = element_text(family = "Noto Sans CJK TC"))


# =====================================
# accumulated cases
# =====================================






