}else if(input$adm_level == "adm3"){
}
})
# # Route select input box
# output$routeSelect <- renderUI({
#     live_vehicles <- getMetroData("VehicleLocations/0")
#
#     routeNums <- sort(unique(as.numeric(live_vehicles$Route)))
#     # Add names, so that we can add all=0
#     names(routeNums) <- routeNums
#     routeNums <- c(All = 0, routeNums)
#     selectInput("routeNum", "Route", choices = routeNums, selected = routeNums[2])
# })
}
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
mutate(adm2 = factor(adm2 , levels = adm2[order(.$total_tilltoday)]) ) %>%
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種"))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(.$total_tilltoday)]) ) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack")
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(.$total_tilltoday)]) ) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(.$total_tilltoday)]) ) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday)]) )
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = TRUE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_clean() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_economist() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 90 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_economist() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_economist() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "COVID-19 疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_economist() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "各縣市疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_economist() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
# =====================================
# 6) total curve
# =====================================
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "各縣市疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
# =====================================
# 6) total curve
# =====================================
plot_vaccination <- vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
#
pivot_longer(cols = c(total_tillyesterday, today) , names_to = "time" , values_to = "vaccinated") %>%
mutate(time = ifelse(time == "today" , "今日接種" , "昨日以前累計接種")) %>%
# visualization
ggplot(aes(x = adm2 , y = vaccinated , fill = time)) +
geom_bar(stat = "identity" , position = "stack") +
coord_flip() +
labs(x = "縣市" , y = "接種人次" , fill = "接種日" ,
title = paste(vaccine_today_date , "各縣市疫苗統計資料") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
ggplotly(plot_vaccination)
library(shiny)
library(shinydashboard) ; library(shinycssloaders)
library(sf)
library(dplyr) ; library(tidyr)
library(ggplot2) ; library(plotly) ; library(leaflet) ; library(ggsci)
library(lubridate) ; library(stringr)
?icon
?valueBox
ggplotly(plot_vaccination) %>%
layout(legend = list(x = 0.8, y = 0.1 , font = list(size = 9)))
ggplotly(plot_vaccination) %>%
layout(legend = list(x = 0.7, y = 0.1 , font = list(size = 9)))
ggplotly(plot_vaccination) %>%
layout(legend = list(x = 0.6, y = 0.1 , font = list(size = 9)))
sum(vaccine_df$total_tilltoday)
paste("資料統計截止時間:" , vaccine_date_update)
runApp()
runApp()
runApp()
runApp()
runApp()
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)]))
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
# visualization
ggplot(aes(x = adm2 , y = delivered_tilltotday)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "縣市" , y = "劑數" ,
title = paste(vaccine_today_date , "累計配送劑數") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
# visualization
ggplot(aes(x = adm2 , y = delivered_tilltotday)) +
geom_bar(stat = "identity" , fill = "deeppink3") +
coord_flip() +
labs(x = "縣市" , y = "劑數" ,
title = paste(vaccine_today_date , "累計配送劑數") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
# visualization
ggplot(aes(x = adm2 , y = delivered_tilltotday)) +
geom_bar(stat = "identity" , fill = "dodgeblue3") +
coord_flip() +
labs(x = "縣市" , y = "劑數" ,
title = paste(vaccine_today_date , "累計配送劑數") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
# visualization
ggplot(aes(x = adm2 , y = delivered_tilltotday)) +
geom_bar(stat = "identity" , fill = "dodgerblue3") +
coord_flip() +
labs(x = "縣市" , y = "劑數" ,
title = paste(vaccine_today_date , "累計配送劑數") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
plot_vaccination_delivered <- vaccine_df %>%
# order adm2 by total vaccinated number
mutate(adm2 = factor(adm2 , levels = adm2[order(total_tilltoday , decreasing = FALSE)])) %>%
# visualization
ggplot(aes(x = adm2 , y = delivered_tilltotday)) +
geom_bar(stat = "identity" , fill = "dodgerblue3") +
coord_flip() +
labs(x = "縣市" , y = "劑數" ,
title = paste(vaccine_today_date , "累計配送劑數") ,
subtitle = paste("資料統計截止時間:" , vaccine_date_update)) +
ggthemes::theme_fivethirtyeight() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 8) ,
axis.text.y = element_text(size = 8))
ggplotly(plot_vaccination_delivered) %>%
layout(legend = list(x = 0.6, y = 0.1 , font = list(size = 9)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
COVID_df %>%
group_by(date_diagnostic , imported) %>%
summarize(n_cases = sum(n_cases)) %>% # number of cases per day
ungroup() %>%
filter(!is.na(imported)) %>%
mutate(imported = ifelse(imported , "境外移入" , "本土感染"))
# =====================================
# import data
# =====================================
# 鄉鎮以年齡及性別分組確診數
COVID_df <- read.csv("https://data.cdc.gov.tw/download?resourceid=3c1e263d-16ec-4d70-b56c-21c9e2171fc7&dataurl=https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.csv" ,
stringsAsFactors = FALSE) %>%
setNames(c("disease" , "date_diagnostic" , "adm2" , "adm3" , "gender" , "imported" , "age" , "n_cases")) %>%
select(-disease) %>%
# cleaan table
mutate(date_diagnostic = lubridate::as_date(as.character(date_diagnostic))) %>%
mutate(adm2 = ifelse(adm2 == "空值" , NA , adm2) ,
adm3 = ifelse(adm3 == "空值" , NA , adm3) ,
imported = ifelse(imported == "是" , TRUE , FALSE)) %>%
mutate(adm2 = str_replace_all(adm2 , "台" , "臺") ) %>%
# complete time-series (days without confirmed cases)
right_join(
data.frame(date_diagnostic = seq(min(.$date_diagnostic) ,
max(.$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases))
COVID_df %>%
group_by(date_diagnostic , imported) %>%
summarize(n_cases = sum(n_cases)) %>% # number of cases per day
ungroup() %>%
filter(!is.na(imported)) %>%
mutate(imported = ifelse(imported , "境外移入" , "本土感染"))
COVID_df
COVID_df %>%
group_by(date_diagnostic)
COVID_df %>%
group_by(date_diagnostic)
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases))
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA))
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA)) %>%
ggplot(aes(x = date_diagnostic)) +
geom_bar(aes(y = n_cases) , stat = "identity" , fill = "azure3")
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA)) %>%
ggplot(aes(x = date_diagnostic)) +
geom_bar(aes(y = n_cases) , stat = "identity" , fill = "azure3") +
labs(x = "個案研判日" , y = "總確診病例數" ,
title = "每日確診數七日移動平均") +
scale_x_date(date_breaks = "1 month" , date_labels = "%Y/%m" , date_minor_breaks = "1 week") +
ggthemes::theme_economist_white() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA)) %>%
ggplot(aes(x = date_diagnostic)) +
geom_bar(aes(y = n_cases) , stat = "identity" , fill = "azure3") +
geom_line(aes(y = moving_average) , color = "darkred") +
labs(x = "個案研判日" , y = "總確診病例數" ,
title = "每日確診數七日移動平均") +
scale_x_date(date_breaks = "1 month" , date_labels = "%Y/%m" , date_minor_breaks = "1 week") +
ggthemes::theme_economist_white() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA)) %>%
ggplot(aes(x = date_diagnostic)) +
geom_bar(aes(y = n_cases) , stat = "identity" , fill = "azure3") +
geom_line(aes(y = moving_average) , color = "deeppink3") +
labs(x = "個案研判日" , y = "總確診病例數" ,
title = "每日確診數七日移動平均") +
scale_x_date(date_breaks = "1 month" , date_labels = "%Y/%m" , date_minor_breaks = "1 week") +
ggthemes::theme_economist_white() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
plot_movingavg_curve <- COVID_df %>%
group_by(date_diagnostic) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
arrange(date_diagnostic) %>%
mutate(moving_average = zoo::rollapply(n_cases ,
width = 7 ,
FUN = mean ,
align = "right" ,
fill = NA)) %>%
ggplot(aes(x = date_diagnostic)) +
geom_bar(aes(y = n_cases) , stat = "identity" , fill = "azure3") +
geom_line(aes(y = moving_average) , color = "deeppink3") +
labs(x = "個案研判日" , y = "總確診病例數" ,
title = "每日確診數七日移動平均") +
scale_x_date(date_breaks = "1 month" , date_labels = "%Y/%m" , date_minor_breaks = "1 week") +
ggthemes::theme_economist_white() +
theme(text = element_text(family = "Noto Sans CJK TC") ,
axis.text.x = element_text(angle = 30 , vjust = 1 , hjust = 1 , size = 7))
runApp()
runApp()
