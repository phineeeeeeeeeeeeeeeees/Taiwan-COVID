COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases , 0 , n_cases)))
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases))
population_adm2
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2")
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per population
mutate(n_cases_population = n_cases / population)
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per population
mutate(n_cases_population = n_cases / population) %>%
# 7-day incidence
group_by(date_diagnostic , adm2)
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per population
mutate(n_cases_population = n_cases / population) %>%
# 7-day incidence
group_by(adm2)
?zoo::rollapply
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population , width = 7 , FUN = sum))
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "left"))
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "left" , coredata = TRUE))
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "left" , fill = NA))
COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "right" , fill = NA))
# =====================================
# 7-day incidence (of domestic cases)
# =====================================
# by adm2
incidence_adm2 <- COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "right" ,
fill = NA))
View(incidence_adm2)
rm(incidence_adm2)
# =====================================
# 7-day incidence (of domestic cases)
# =====================================
# by adm2
incidence_daily_adm2 <- COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "right" ,
fill = NA))
incidence_daily_adm2
# =====================================
# 7-day incidence (of domestic cases)
# =====================================
# by adm2
incidence_daily_adm2 <- COVID_df %>%
filter(imported == FALSE) %>%
group_by(date_diagnostic , adm2) %>%
summarize(n_cases = sum(n_cases)) %>%
ungroup() %>%
# complete time series
right_join(
data.frame(date_diagnostic = seq(min(COVID_df$date_diagnostic) ,
max(COVID_df$date_diagnostic) ,
"1 day"))
) %>%
arrange(date_diagnostic) %>%
# complete adm2 list
pivot_wider(id_cols = c(date_diagnostic , adm2) , names_from = adm2 , values_from = n_cases) %>%
select(-`NA`) %>%
pivot_longer(cols = -date_diagnostic , names_to = "adm2" , values_to = "n_cases") %>%
mutate(n_cases = ifelse(is.na(n_cases) , 0 , n_cases)) %>%
# join population
left_join(population_adm2 , by = "adm2") %>%
# number of cases per 100,000
mutate(n_cases_population = n_cases / population * 100000) %>%
# 7-day incidence
group_by(adm2) %>%
mutate(incidence_7day = zoo::rollapply(n_cases_population ,
width = 7 ,
FUN = sum ,
align = "right" ,
fill = NA)) %>%
ungroup()
incidence_daily_adm2
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic))
TWN_adm3
?st_union
TWN_adm3 %>%
st_union(by_feature = COUNTYNAME)
TWN_adm3 %>%
group_by(COUNTYNAME) %>%
summarize()
TWN_adm2 <- TWN_adm3 %>%
group_by(COUNTYNAME) %>%
summarize() %>%
ungroup
TWN_adm2
# the latest day
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic))
TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(incidence_7day),
by = c("COUNTYNAME" = "adm2")
)
TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
)
RColorBrewer::brewer.pal("YlOrRd" , 7)
RColorBrewer::brewer.pal(7,"YlOrRd")
# map
ggplot() +
geom_sf(
data = TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
) %>%
mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day)) ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(RColorBrewer::brewer.pal(7,"YlOrRd"))
# map
ggplot() +
geom_sf(
data = TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
) %>%
mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day)) ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(7,"YlOrRd"))
TWN_adm3
# Taiwan shapefile
TWN_adm3 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
st_simplify(preserveTopology = TRUE , dTolerance = 0.03)
plot(TWN_adm3)
plot(TWN_adm3 %>% select(TOWNNAME))
locator()
# Taiwan shapefile
TWN_adm3 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
st_simplify(preserveTopology = TRUE , dTolerance = 0.03) %>%
st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
plot(TWN_adm3 %>% select(TOWNNAME))
# Taiwan shapefile
TWN_adm3 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
st_simplify(preserveTopology = TRUE , dTolerance = 0.01) %>%
st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
plot(TWN_adm3 %>% select(TOWNNAME))
TWN_adm2 <- TWN_adm3 %>%
group_by(COUNTYNAME) %>%
summarize() %>%
ungroup
# map
ggplot() +
geom_sf(
data = TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
) %>%
mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day)) ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(7,"YlOrRd"))
TWN_adm2 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
group_by(COUNTYNAME) %>%
summarize() %>%
ungroup %>%
st_simplify(preserveTopology = TRUE , dTolerance = 0.01) %>%
st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
TWN_adm2 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
group_by(COUNTYNAME) %>%
summarize() %>%
ungroup %>%
st_simplify(preserveTopology = FALSE , dTolerance = 0.01) %>%
st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
TWN_adm2 <- read_sf("Taiwan_adm3/TOWN_MOI_1100415.shp") %>%
group_by(COUNTYNAME) %>%
summarize() %>%
ungroup %>%
st_simplify(preserveTopology = FALSE , dTolerance = 0.01) %>%
st_crop(xmin = 118 , xmax = 122.5 , ymin = 21 , ymax = 27)
# map
ggplot() +
geom_sf(
data = TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
) %>%
mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day)) ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(7,"YlOrRd"))
# the incidence of the lastest day as sf
incidence_latest_adm2_sf <- TWN_adm2 %>%
left_join(
incidence_daily_adm2 %>%
filter(date_diagnostic == max(COVID_df$date_diagnostic)) %>%
select(adm2 , incidence_7day),
by = c("COUNTYNAME" = "adm2")
) %>%
mutate(incidence_7day = ifelse(is.na(incidence_7day) , 0 , incidence_7day))
# map
ggplot() +
geom_sf(
data = incidence_latest_adm2_sf ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(7,"YlOrRd")) +
labs(fill = "近七日發生率(每十萬人)") +
theme_bw() +
theme(text = element_text(family = "Noto Sans CJK TC"))
# map
ggplot() +
geom_sf(
data = incidence_latest_adm2_sf ,
aes(fill = incidence_7day)
) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(7,"YlOrRd")) +
labs(fill = "近七日發生率\n(每十萬人)") +
theme_bw() +
theme(text = element_text(family = "Noto Sans CJK TC"))
